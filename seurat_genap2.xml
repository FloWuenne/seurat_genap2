<tool id="seurat_genap2" name="Seurat GenAP2" version="2.3.4">
	<description>- toolkit for QC and analysis of single-cell dta</description>
	<requirements>
		<requirement type="package" version="3.4.1">r-base</requirement>
		<requirement type="package" version="2.3.4">r-seurat</requirement>
		<requirement type="package" version="1.0.0">bioconductor-singlecellexperiment</requirement>
		<requirement type="package" version="1.6.0">r-optparse</requirement>
		<requirement type="package" version="0.3.7">umap-learn</requirement>
	</requirements>
	<version_command><![CDATA[
echo $(R --version | grep version | grep -v GNU)", seurat version" $(R --vanilla --slave -e "library(seurat); cat(sessionInfo()\$otherPkgs\$seurat\$Version)" 2> /dev/null | grep -v -i "WARNING: ")", SingleCellExperiment version" $(R --vanilla --slave -e "library(SingleCellExperiment); cat(sessionInfo()\$otherPkgs\$SingleCellExperiment\$Version)" 2> /dev/null | grep -v -i "WARNING: ")", optparse version" $(R --vanilla --slave -e "library(optparse); cat(sessionInfo()\$otherPkgs\$optparse\$Version)" 2> /dev/null | grep -v -i "WARNING: ")
    ]]></version_command>
	<command detect_errors="exit_code"><![CDATA[

#if $rscript:
	cp '$__tool_directory__/seurat.R' '$out_rscript' &&
#end if

Rscript '$__tool_directory__/seurat.R'

--quant_mat $alevin_quants_mat
--quants_mat_cols $alevin_quants_mat_cols
--quants_mat_rows $alevin_quants_mat_rows
--dge.input.format $dge_input_format
--numPCs $adv.num_PCs
--min.cells $adv.min_cells
--min.genes $adv.min_genes

#if $adv.low_thresholds:
	--low.thresholds $adv.low_thresholds
#end if
#if $adv.high_thresholds:
	--high.thresholds $adv.high_thresholds
#end if
#if $adv.x_low_cutoff:
	--x.low.cutoff $adv.x_low_cutoff
#end if
#if $adv.x_high_cutoff:
	--x.high.cutoff $adv.x_high_cutoff
#end if
#if $adv.y_cutoff:
	--y.cutoff $adv.y_cutoff
#end if
#if $adv.cells_use:
	--cells.use $adv.cells_use
#end if
#if $adv.resolution:
	--resolution $adv.resolution
#end if
#if $adv.min_pct:
	--min.pct $adv.min_pct
#end if
#if $adv.logfc_threshold:
	--logfc.threshold $adv.logfc_threshold
#end if

]]></command>

	<inputs>
		<param name="alevin_quants_mat" type="data" format="txt" label="Counts file" help="Specify the binary quant matrix from alevin!"/>
		<param name="alevin_quants_mat_cols" type="data" format="txt" label="Gene names" help="Specify the alevin gene names output file!"/>
		<param name="alevin_quants_mat_rows" type="data" format="txt" label="Cell names" help="Specify the alevin cell names output file!"/>
		<param name="dge_input_format" label="Choose your input format:" type="select" multiple="false" format="text" help="Select the type of input you have!">
			<option value="dge_matrix">Genes x Cells matrix (DGE matrix)</option>
			<option value="salmon_alevin_quant"> Salmon Alevin output</option>
		</param>
		<param name="rscript" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="False" label="Output Rscript?" help="If this option is set to Yes, the Rscript used by this tool will be provided as a text file in the output. Default: No" />
		<section name="adv" title="Advanced Options">
			<param argument="--num_PCs" type="integer" min="0" value="10" label="Number of PCs to use in plots" help="Uses this number of PCs in PCHEatmap, JackStrawPlot, FindClusters, RunTSNE. Default: 10" />
			<param argument="--min_cells" type="integer" min="0" value="0" label="Minimum cells" help="Include genes with detected expression in at least this many cells." />
			<param argument="--min_genes" type="integer" min="0"  value="0" label="Minimum genes" help="Include cells where at least this many genes are detected." />
			<param argument="--low_thresholds" type="float" optional="True" label="Low threshold for filtering cells" />
			<param argument="--high_thresholds" type="float" optional="True" label="High threshold for filtering cells" />
			<param argument="--x_low_cutoff" type="float" optional="True" label="X-axis low cutoff for variable genes" help="Bottom cutoff on x-axis for identifying variable genes" />
			<param argument="--x_high_cutoff" type="float" optional="True" label="X-axis high cutoff for variable genes" help="Top cutoff on x-axis for identifying variable genes" />
			<param argument="--y_cutoff" type="float" optional="True" label="Y-axis cutoff for variable genes" help="Bottom cutoff on y-axis for identifying variable genes" />
			<param argument="--cells_use" type="integer" min="0" optional="True" label="Cells to use for PCHeatmap" help="Plots this number of top ‘extreme’ cells on both ends of the spectrum, which dramatically speeds plotting for large datasets" />
			<param argument="--resolution" type="float" optional="True" label="Resolution parameter" help="Value of the resolution parameter used in FindClusters, use a value above (below) 1.0 if you want to obtain a larger (smaller) number of communities." />
			<param argument="--min_pct" type="float" optional="True" label="Minimum percent cells" help="With FindMarkers only test genes that are detected in a minimum fraction of min.pct cells in either of the two populations. Meant to speed up the function by not testing genes that are very infrequently expressed. Default is 0.1" />
			<param argument="--logfc_threshold" type="float" min="0" optional="True" label="LogFC threshold"
                help="With FindMarkers, limit testing to genes which show, on average, at least X-fold difference (log-scale)between the two groups of cells. Default is 0.25 Increasing logfc.threshold speeds up the function, but can miss weaker signals."/>
		</section>
	</inputs>

	<outputs>
		<data name="out_pdf" format="pdf" from_work_dir="out.pdf" label="${tool.name} on ${on_string}: Plots"/>
		<data name="seurat_object" format="txt" from_work_dir="seurat_object.Rds" label="Seurat .Rds object"/>
	</outputs>

	<tests>
		<!-- Ensure count matrix input works -->
		<test>
			<param name="alevin_quants_mat" value="salmon_alevin_exp_matrix_test.txt"/>
			<param name="alevin_quants_mat_cols" value="salmon_alevin_gene_names_test.txt"/>
			<param name="alevin_quants_mat_rows" value="salmon_alevin_cell_names_test.txt"/>
			<param name="dge_input_format" value="salmon_alevin_quant"/>
			<param name="min_cells" value="1"/>
			<param name="min_genes" value="10"/>
			<param name="low_thresholds" value="1"/>
			<param name="high_thresholds" value="20000000"/>
			<param name="x_low_cutoff" value="0.0125"/>
			<param name="x_high_cutoff" value="3"/>
			<param name="y_cutoff" value="0.5"/>
 			<param name="numPCs" value="4"/>
			<param name="cells_use" value="500"/>
			<param name="resolution" value="0.6"/>
			<param name="min_pct" value="0.25"/>
			<param name="logfc_threshold" value="0.25"/>
			<output name="seurat_object" value="seurat_object.Rds"/>
			<output name="out_pdf" value="seurat_plots.pdf"/>
		</test>
	</tests>
	<help><![CDATA[
Seurat pipeline - Galaxy GenAP2 implementation
===============================================

This tool enables processing of single-cell data starting from a cell x gene matrix, performing general QC, dimensional reduction and identification of markers as described in the Seurat - Guided Clustering tutorial (https://satijalab.org/seurat/pbmc3k_tutorial.html). This specific tool will produce an RDS object as output that is directly aimed as being used as input to the downstream visualisation tools implemented in GenAP2.
The following features were added to the original seurat tool shed repository:

* Choice of differeent input formats:

	** Processing of Alevin output into gene x cell matrix format

* Different dimensional reduction methods

	** Option to choose between UMAP and tSNE (UMAP much faster than tSNE!)

* Return output as a custom RDS object for downstream visualisation tools

Contact
======================

If you have questions, suggestions or complaints, please send me a mail at: flowuenne@gmail.com!

Disclaimer
==============

This galaxy tool has been completely built upon the seurat implementation in the galaxy tool shed, which can be found in the following github repository:
https://github.com/galaxyproject/tools-iuc/blob/master/tools/seurat/
and in the galaxy tool shed: https://toolshed.g2.bx.psu.edu/repository?repository_id=589b5d8344f922ec&changeset_revision=8d8412d35247
All credit for the implementation of seurat in galaxy goes to the original package developers!
Below you can find the original documentation 
Original seurat galaxy tool shed  documentation:

**What it does**

Seurat_ is a toolkit for quality control, analysis, and exploration of single cell RNA sequencing data.
It is developed and maintained by the `Satija Lab`_ at NYGC. Seurat aims to enable users to identify and
interpret sources of heterogeneity from single cell transcriptomic measurements, and to integrate diverse
types of single cell data. See the `Seurat Guided Clustering tutorial`_ for more information.
-----

**Inputs**

    * Gene count matrix in TAB-separated format

-----

**Outputs**

    * PDF of plots

Optionally you can choose to output

    * Seurat RDS object (can use within R)
    * Rscript

.. _Seurat: https://www.nature.com/articles/nbt.4096
.. _Satija Lab: https://satijalab.org/seurat/
.. _Seurat Guided Clustering tutorial: https://satijalab.org/seurat/pbmc3k_tutorial.html
]]></help>
	<citations>
		<citation type="doi">10.1038/nbt.4096</citation>
	</citations>
</tool>
